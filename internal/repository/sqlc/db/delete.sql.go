// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: delete.sql

package db

import (
	"context"
)

const deleteFileStashURLByID = `-- name: DeleteFileStashURLByID :exec
DELETE FROM file_stash_url WHERE id = $1
`

func (q *Queries) DeleteFileStashURLByID(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteFileStashURLByID)
	return err
}

const deleteInfluxDBConfigurationByID = `-- name: DeleteInfluxDBConfigurationByID :exec
DELETE FROM influxdb_configurations WHERE id = $1
`

func (q *Queries) DeleteInfluxDBConfigurationByID(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteInfluxDBConfigurationByID)
	return err
}

const deleteLVMConfByID = `-- name: DeleteLVMConfByID :exec
DELETE FROM lvm_conf WHERE id = $1
`

func (q *Queries) DeleteLVMConfByID(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteLVMConfByID)
	return err
}

const deleteLVStorageIssuerByID = `-- name: DeleteLVStorageIssuerByID :exec
DELETE FROM lv_storage_issuer WHERE id = $1
`

func (q *Queries) DeleteLVStorageIssuerByID(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteLVStorageIssuerByID)
	return err
}

const deleteLogicalVolumeByID = `-- name: DeleteLogicalVolumeByID :exec
DELETE FROM logical_volumes WHERE lv_id = $1
`

func (q *Queries) DeleteLogicalVolumeByID(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteLogicalVolumeByID)
	return err
}

const deleteMachineByID = `-- name: DeleteMachineByID :exec
DELETE FROM machines WHERE machine_id = $1
`

func (q *Queries) DeleteMachineByID(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteMachineByID)
	return err
}

const deleteMachineConfByID = `-- name: DeleteMachineConfByID :exec
DELETE FROM machine_conf WHERE id = $1
`

func (q *Queries) DeleteMachineConfByID(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteMachineConfByID)
	return err
}

const deleteNotificationByID = `-- name: DeleteNotificationByID :exec
DELETE FROM notifications WHERE id = $1
`

func (q *Queries) DeleteNotificationByID(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteNotificationByID)
	return err
}

const deletePhysicalVolumeByID = `-- name: DeletePhysicalVolumeByID :exec
DELETE FROM physical_volumes WHERE pv_id = $1
`

func (q *Queries) DeletePhysicalVolumeByID(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deletePhysicalVolumeByID)
	return err
}

const deleteRabbitMQConfig = `-- name: DeleteRabbitMQConfig :exec
DELETE FROM rabbit_mq_config
`

func (q *Queries) DeleteRabbitMQConfig(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteRabbitMQConfig)
	return err
}

const deleteRealtimeLogByID = `-- name: DeleteRealtimeLogByID :exec
DELETE FROM realtime_logs WHERE id = $1
`

func (q *Queries) DeleteRealtimeLogByID(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteRealtimeLogByID)
	return err
}

const deleteVolumeGroupByID = `-- name: DeleteVolumeGroupByID :exec
DELETE FROM volume_groups WHERE vg_id = $1
`

func (q *Queries) DeleteVolumeGroupByID(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteVolumeGroupByID)
	return err
}
