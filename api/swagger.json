{
    "swagger": "2.0",
    "info": {
        "description": "API for batch job control.",
        "title": "ClusterCockpit REST API",
        "contact": {
            "name": "ClusterCockpit Project",
            "url": "https://github.com/Deepbinder-main",
            "email": "support@clustercockpit.org"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/file_stash_url": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FileStash"
                ],
                "summary": "Retrieves the File Stash URL",
                "responses": {
                    "200": {
                        "description": "Retrieved File Stash URL",
                        "schema": {
                            "$ref": "#/definitions/api.FileStashUrl"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FileStash"
                ],
                "summary": "Updates the File Stash URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File Stash URL",
                        "name": "url",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated File Stash URL",
                        "schema": {
                            "$ref": "#/definitions/api.FileStashUrl"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FileStash"
                ],
                "summary": "Creates or updates File Stash URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File Stash URL",
                        "name": "url",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created/Updated File Stash URL",
                        "schema": {
                            "$ref": "#/definitions/api.FileStashUrl"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FileStash"
                ],
                "summary": "Deletes the File Stash URL",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/influxdb_config": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InfluxDB"
                ],
                "summary": "Retrieves the InfluxDB configuration",
                "responses": {
                    "200": {
                        "description": "Retrieved InfluxDB configuration",
                        "schema": {
                            "$ref": "#/definitions/api.InfluxdbConfiguration"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InfluxDB"
                ],
                "summary": "Updates the InfluxDB configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Database Name",
                        "name": "database_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Host",
                        "name": "host",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Port",
                        "name": "port",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User",
                        "name": "user",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization",
                        "name": "organization",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "SSL Enabled",
                        "name": "ssl_enabled",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Batch Size",
                        "name": "batch_size",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Retry Interval",
                        "name": "retry_interval",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Retry Exponential Base",
                        "name": "retry_exponential_base",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Max Retries",
                        "name": "max_retries",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Max Retry Time",
                        "name": "max_retry_time",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Meta as Tags",
                        "name": "meta_as_tags",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated InfluxDB configuration",
                        "schema": {
                            "$ref": "#/definitions/api.InfluxdbConfiguration"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InfluxDB"
                ],
                "summary": "Creates or updates InfluxDB configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Database Name",
                        "name": "database_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Host",
                        "name": "host",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Port",
                        "name": "port",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User",
                        "name": "user",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization",
                        "name": "organization",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "SSL Enabled",
                        "name": "ssl_enabled",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Batch Size",
                        "name": "batch_size",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Retry Interval",
                        "name": "retry_interval",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Retry Exponential Base",
                        "name": "retry_exponential_base",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Max Retries",
                        "name": "max_retries",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Max Retry Time",
                        "name": "max_retry_time",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Meta as Tags",
                        "name": "meta_as_tags",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created/Updated InfluxDB configuration",
                        "schema": {
                            "$ref": "#/definitions/api.InfluxdbConfiguration"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "InfluxDB"
                ],
                "summary": "Deletes the InfluxDB configuration",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/logical_volume": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LogicalVolume"
                ],
                "summary": "Creates a new logical volume record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Logical Volume Name",
                        "name": "lv_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Volume Group Name",
                        "name": "vg_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Logical Volume Attributes",
                        "name": "lv_attr",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Logical Volume Size",
                        "name": "lv_size",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created logical volume",
                        "schema": {
                            "$ref": "#/definitions/api.LogicalVolume"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/logical_volume/{lv_id}": {
            "put": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LogicalVolume"
                ],
                "summary": "Updates a logical volume record",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Logical Volume ID",
                        "name": "lv_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Logical Volume Name",
                        "name": "lv_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Volume Group Name",
                        "name": "vg_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Logical Volume Attributes",
                        "name": "lv_attr",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Logical Volume Size",
                        "name": "lv_size",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated logical volume",
                        "schema": {
                            "$ref": "#/definitions/api.LogicalVolume"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LogicalVolume"
                ],
                "summary": "Deletes a logical volume record",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Logical Volume ID",
                        "name": "lv_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/logical_volumes/{machine_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LogicalVolume"
                ],
                "summary": "Retrieves logical volume records for a machine",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved logical volumes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.LogicalVolume"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/lv_storage_issuer": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LVStorageIssuer"
                ],
                "summary": "Creates a new LV Storage Issuer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Increment Buffer",
                        "name": "inc_buffer",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Decrement Buffer",
                        "name": "dec_buffer",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Hostname",
                        "name": "hostname",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Minimum Available Space in GB",
                        "name": "minAvailableSpaceGB",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Maximum Available Space in GB",
                        "name": "maxAvailableSpaceGB",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created LV Storage Issuer",
                        "schema": {
                            "$ref": "#/definitions/api.LvStorageIssuer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/lv_storage_issuer/{id}": {
            "put": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LVStorageIssuer"
                ],
                "summary": "Updates an LV Storage Issuer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "LV Storage Issuer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Increment Buffer",
                        "name": "inc_buffer",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Decrement Buffer",
                        "name": "dec_buffer",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Hostname",
                        "name": "hostname",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Minimum Available Space in GB",
                        "name": "minAvailableSpaceGB",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Maximum Available Space in GB",
                        "name": "maxAvailableSpaceGB",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated LV Storage Issuer",
                        "schema": {
                            "$ref": "#/definitions/api.LvStorageIssuer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LVStorageIssuer"
                ],
                "summary": "Deletes an LV Storage Issuer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "LV Storage Issuer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/lv_storage_issuers": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LVStorageIssuer"
                ],
                "summary": "Retrieves all LV Storage Issuers",
                "responses": {
                    "200": {
                        "description": "Retrieved LV Storage Issuers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.LvStorageIssuer"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/machine": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Machine"
                ],
                "summary": "Creates a new machine record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hostname",
                        "name": "hostname",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "OS Version",
                        "name": "os_version",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "IP Address",
                        "name": "ip_address",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created machine",
                        "schema": {
                            "$ref": "#/definitions/api.Machine"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/machine/{machine_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Machine"
                ],
                "summary": "Retrieves a machine record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved machine",
                        "schema": {
                            "$ref": "#/definitions/api.Machine"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Machine"
                ],
                "summary": "Updates a machine record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hostname",
                        "name": "hostname",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "OS Version",
                        "name": "os_version",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "IP Address",
                        "name": "ip_address",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated machine",
                        "schema": {
                            "$ref": "#/definitions/api.Machine"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Machine"
                ],
                "summary": "Deletes a machine record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/machine_conf": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MachineConf"
                ],
                "summary": "Creates a new machine configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hostname",
                        "name": "hostname",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Passphrase",
                        "name": "passphrase",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Port Number",
                        "name": "port_number",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Host Key",
                        "name": "host_key",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Folder Path",
                        "name": "folder_path",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created machine configuration",
                        "schema": {
                            "$ref": "#/definitions/api.MachineConf"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/machine_conf/{id}": {
            "put": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MachineConf"
                ],
                "summary": "Updates a machine configuration",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Machine Configuration ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hostname",
                        "name": "hostname",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Passphrase",
                        "name": "passphrase",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Port Number",
                        "name": "port_number",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Host Key",
                        "name": "host_key",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Folder Path",
                        "name": "folder_path",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated machine configuration",
                        "schema": {
                            "$ref": "#/definitions/api.MachineConf"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MachineConf"
                ],
                "summary": "Deletes a machine configuration",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Machine Configuration ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/machine_conf/{machine_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MachineConf"
                ],
                "summary": "Retrieves a machine configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved machine configuration",
                        "schema": {
                            "$ref": "#/definitions/api.MachineConf"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/machines": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Machine"
                ],
                "summary": "Lists all machines",
                "responses": {
                    "200": {
                        "description": "List of machines",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Machine"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/notifications": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Retrieves notifications",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit the number of notifications",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved notifications",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Notification"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Creates a new notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification message",
                        "name": "message",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created notification",
                        "schema": {
                            "$ref": "#/definitions/api.Notification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/notifications/{id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Deletes a notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/physical_volume": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PhysicalVolume"
                ],
                "summary": "Creates a new physical volume record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Physical Volume Name",
                        "name": "pv_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Volume Group Name",
                        "name": "vg_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Physical Volume Format",
                        "name": "pv_fmt",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Physical Volume Attributes",
                        "name": "pv_attr",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Physical Volume Size",
                        "name": "pv_size",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Physical Volume Free Space",
                        "name": "pv_free",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created physical volume",
                        "schema": {
                            "$ref": "#/definitions/api.PhysicalVolume"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/physical_volume/{pv_id}": {
            "put": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PhysicalVolume"
                ],
                "summary": "Updates a physical volume record",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Physical Volume ID",
                        "name": "pv_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Physical Volume Name",
                        "name": "pv_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Volume Group Name",
                        "name": "vg_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Physical Volume Format",
                        "name": "pv_fmt",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Physical Volume Attributes",
                        "name": "pv_attr",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Physical Volume Size",
                        "name": "pv_size",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Physical Volume Free Space",
                        "name": "pv_free",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated physical volume",
                        "schema": {
                            "$ref": "#/definitions/api.PhysicalVolume"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PhysicalVolume"
                ],
                "summary": "Deletes a physical volume record",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Physical Volume ID",
                        "name": "pv_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/physical_volumes/{machine_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PhysicalVolume"
                ],
                "summary": "Retrieves physical volume records for a machine",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved physical volumes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.PhysicalVolume"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rabbitmq_config": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RabbitMQ"
                ],
                "summary": "Retrieves the RabbitMQ configuration",
                "responses": {
                    "200": {
                        "description": "Retrieved RabbitMQ configuration",
                        "schema": {
                            "$ref": "#/definitions/api.RabbitMqConfig"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RabbitMQ"
                ],
                "summary": "Updates the RabbitMQ configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Connection URL",
                        "name": "conn_url",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated RabbitMQ configuration",
                        "schema": {
                            "$ref": "#/definitions/api.RabbitMqConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RabbitMQ"
                ],
                "summary": "Creates or updates RabbitMQ configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Connection URL",
                        "name": "conn_url",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created/Updated RabbitMQ configuration",
                        "schema": {
                            "$ref": "#/definitions/api.RabbitMqConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RabbitMQ"
                ],
                "summary": "Deletes the RabbitMQ configuration",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/realtime_logs": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RealtimeLogs"
                ],
                "summary": "Creates a new realtime log",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Log message",
                        "name": "log_message",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created realtime log",
                        "schema": {
                            "$ref": "#/definitions/api.RealtimeLog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/realtime_logs/{id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RealtimeLogs"
                ],
                "summary": "Deletes a realtime log",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Realtime Log ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/realtime_logs/{machine_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RealtimeLogs"
                ],
                "summary": "Retrieves realtime logs for a machine",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of logs",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved realtime logs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.RealtimeLog"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Modifies user defined by username (id) in one of four possible ways.\nIf more than one formValue is set then only the highest priority field is used.\nOnly accessible from IPs registered with apiAllowedIPs configuration option.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Updates an existing user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database ID of User",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "admin",
                            "support",
                            "manager",
                            "user",
                            "api"
                        ],
                        "type": "string",
                        "description": "Priority 1: Role to add",
                        "name": "add-role",
                        "in": "formData"
                    },
                    {
                        "enum": [
                            "admin",
                            "support",
                            "manager",
                            "user",
                            "api"
                        ],
                        "type": "string",
                        "description": "Priority 2: Role to remove",
                        "name": "remove-role",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Priority 3: Project to add",
                        "name": "add-project",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Priority 4: Project to remove",
                        "name": "remove-project",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response Message",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity: The user could not be updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a JSON-encoded list of users.\nRequired query-parameter defines if all users or only users with additional special roles are returned.\nOnly accessible from IPs registered with apiAllowedIPs configuration option.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Returns a list of users",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "If returned list should contain all users or only users with additional special roles",
                        "name": "not-just-user",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users returned successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ApiReturnedUser"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "User specified in form data will be saved to database.\nOnly accessible from IPs registered with apiAllowedIPs configuration option.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Adds a new user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unique user ID",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "admin",
                            "support",
                            "manager",
                            "user",
                            "api"
                        ],
                        "type": "string",
                        "description": "User role",
                        "name": "role",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Managed project, required for new manager role user",
                        "name": "project",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Users name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Users email",
                        "name": "email",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity: creating user failed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "User defined by username in form data will be deleted from database.\nOnly accessible from IPs registered with apiAllowedIPs configuration option.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Deletes a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID to delete",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity: deleting user failed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/volume_group/{group_id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolumeGroup"
                ],
                "summary": "Deletes a volume group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Volume Group ID",
                        "name": "group_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/volume_groups": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolumeGroups"
                ],
                "summary": "Creates a new volume group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Volume Group Name",
                        "name": "vg_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "PV Count",
                        "name": "pv_count",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "LV Count",
                        "name": "lv_count",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Snap Count",
                        "name": "snap_count",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VG Attributes",
                        "name": "vg_attr",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VG Size",
                        "name": "vg_size",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VG Free",
                        "name": "vg_free",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created volume group",
                        "schema": {
                            "$ref": "#/definitions/api.VolumeGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/volume_groups/{machine_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolumeGroups"
                ],
                "summary": "Retrieves volume groups for a machine",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved volume groups",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.VolumeGroup"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/volume_groups/{vg_id}": {
            "put": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolumeGroups"
                ],
                "summary": "Updates a volume group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Volume Group ID",
                        "name": "vg_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Volume Group Name",
                        "name": "vg_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "PV Count",
                        "name": "pv_count",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "LV Count",
                        "name": "lv_count",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Snap Count",
                        "name": "snap_count",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VG Attributes",
                        "name": "vg_attr",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VG Size",
                        "name": "vg_size",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VG Free",
                        "name": "vg_free",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated volume group",
                        "schema": {
                            "$ref": "#/definitions/api.VolumeGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ApiReturnedUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "Error Message",
                    "type": "string"
                },
                "status": {
                    "description": "Statustext of Errorcode",
                    "type": "string"
                }
            }
        },
        "api.FileStashUrl": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "api.InfluxdbConfiguration": {
            "type": "object",
            "properties": {
                "batch_size": {
                    "type": "integer"
                },
                "database_name": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "max_retries": {
                    "type": "integer"
                },
                "max_retry_time": {
                    "type": "string"
                },
                "meta_as_tags": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "retry_exponential_base": {
                    "type": "integer"
                },
                "retry_interval": {
                    "type": "string"
                },
                "ssl_enabled": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "api.LogicalVolume": {
            "type": "object",
            "properties": {
                "lv_attr": {
                    "type": "string"
                },
                "lv_name": {
                    "type": "string"
                },
                "lv_size": {
                    "type": "string"
                },
                "machine_id": {
                    "type": "string"
                },
                "vg_name": {
                    "type": "string"
                }
            }
        },
        "api.LvStorageIssuer": {
            "type": "object",
            "properties": {
                "dec_buffer": {
                    "type": "integer"
                },
                "hostname": {
                    "type": "string"
                },
                "inc_buffer": {
                    "type": "integer"
                },
                "machine_id": {
                    "type": "string"
                },
                "max_available_space_gb": {
                    "type": "number"
                },
                "min_available_space_gb": {
                    "type": "number"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.Machine": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "machine_id": {
                    "type": "string"
                },
                "os_version": {
                    "type": "string"
                }
            }
        },
        "api.MachineConf": {
            "type": "object",
            "properties": {
                "folder_path": {
                    "type": "string"
                },
                "host_key": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "machine_id": {
                    "type": "string"
                },
                "passphrase": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port_number": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.Notification": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.PhysicalVolume": {
            "type": "object",
            "properties": {
                "machine_id": {
                    "type": "string"
                },
                "pv_attr": {
                    "type": "string"
                },
                "pv_fmt": {
                    "type": "string"
                },
                "pv_free": {
                    "type": "string"
                },
                "pv_name": {
                    "type": "string"
                },
                "pv_size": {
                    "type": "string"
                },
                "vg_name": {
                    "type": "string"
                }
            }
        },
        "api.RabbitMqConfig": {
            "type": "object",
            "properties": {
                "conn_url": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.RealtimeLog": {
            "type": "object",
            "properties": {
                "log_message": {
                    "type": "string"
                },
                "machine_id": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "api.VolumeGroup": {
            "type": "object",
            "properties": {
                "lv_count": {
                    "type": "string"
                },
                "machine_id": {
                    "type": "string"
                },
                "pv_count": {
                    "type": "string"
                },
                "snap_count": {
                    "type": "string"
                },
                "vg_attr": {
                    "type": "string"
                },
                "vg_free": {
                    "type": "string"
                },
                "vg_name": {
                    "type": "string"
                },
                "vg_size": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-Auth-Token",
            "in": "header"
        }
    }
}